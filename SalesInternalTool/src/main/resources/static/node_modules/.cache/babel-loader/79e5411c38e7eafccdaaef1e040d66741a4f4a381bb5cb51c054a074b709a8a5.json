{"ast":null,"code":"import _defineProperty from \"/Users/kaizhang/Desktop/Sales_InternalTool/sales_pipelinefrontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/kaizhang/Desktop/Sales_InternalTool/sales_pipelinefrontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport QuestionCircleOutlined from \"@ant-design/icons/es/icons/QuestionCircleOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Col from '../grid/col';\nimport { useLocaleReceiver } from '../locale/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport Tooltip from '../tooltip';\nimport { FormContext } from './context';\nfunction toTooltipProps(tooltip) {\n  if (!tooltip) {\n    return null;\n  }\n  if (typeof tooltip === 'object' && ! /*#__PURE__*/React.isValidElement(tooltip)) {\n    return tooltip;\n  }\n  return {\n    title: tooltip\n  };\n}\nvar FormItemLabel = function FormItemLabel(_ref) {\n  var prefixCls = _ref.prefixCls,\n    label = _ref.label,\n    htmlFor = _ref.htmlFor,\n    labelCol = _ref.labelCol,\n    labelAlign = _ref.labelAlign,\n    colon = _ref.colon,\n    required = _ref.required,\n    requiredMark = _ref.requiredMark,\n    tooltip = _ref.tooltip;\n  var _useLocaleReceiver = useLocaleReceiver('Form'),\n    _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1),\n    formLocale = _useLocaleReceiver2[0];\n  if (!label) return null;\n  return /*#__PURE__*/React.createElement(FormContext.Consumer, {\n    key: \"label\"\n  }, function (_ref2) {\n    var _classNames2;\n    var vertical = _ref2.vertical,\n      contextLabelAlign = _ref2.labelAlign,\n      contextLabelCol = _ref2.labelCol,\n      labelWrap = _ref2.labelWrap,\n      contextColon = _ref2.colon;\n    var _a;\n    var mergedLabelCol = labelCol || contextLabelCol || {};\n    var mergedLabelAlign = labelAlign || contextLabelAlign;\n    var labelClsBasic = \"\".concat(prefixCls, \"-item-label\");\n    var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && \"\".concat(labelClsBasic, \"-left\"), mergedLabelCol.className, _defineProperty({}, \"\".concat(labelClsBasic, \"-wrap\"), !!labelWrap));\n    var labelChildren = label;\n    // Keep label is original where there should have no colon\n    var computedColon = colon === true || contextColon !== false && colon !== false;\n    var haveColon = computedColon && !vertical;\n    // Remove duplicated user input colon\n    if (haveColon && typeof label === 'string' && label.trim() !== '') {\n      labelChildren = label.replace(/[:|：]\\s*$/, '');\n    }\n    // Tooltip\n    var tooltipProps = toTooltipProps(tooltip);\n    if (tooltipProps) {\n      var _tooltipProps$icon = tooltipProps.icon,\n        icon = _tooltipProps$icon === void 0 ? /*#__PURE__*/React.createElement(QuestionCircleOutlined, null) : _tooltipProps$icon,\n        restTooltipProps = __rest(tooltipProps, [\"icon\"]);\n      var tooltipNode = /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, restTooltipProps), /*#__PURE__*/React.cloneElement(icon, {\n        className: \"\".concat(prefixCls, \"-item-tooltip\"),\n        title: ''\n      }));\n      labelChildren = /*#__PURE__*/React.createElement(React.Fragment, null, labelChildren, tooltipNode);\n    }\n    // Add required mark if optional\n    if (requiredMark === 'optional' && !required) {\n      labelChildren = /*#__PURE__*/React.createElement(React.Fragment, null, labelChildren, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-item-optional\"),\n        title: \"\"\n      }, (formLocale === null || formLocale === void 0 ? void 0 : formLocale.optional) || ((_a = defaultLocale.Form) === null || _a === void 0 ? void 0 : _a.optional)));\n    }\n    var labelClassName = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-required\"), required), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-required-mark-optional\"), requiredMark === 'optional'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-no-colon\"), !computedColon), _classNames2));\n    return /*#__PURE__*/React.createElement(Col, Object.assign({}, mergedLabelCol, {\n      className: labelColClassName\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: htmlFor,\n      className: labelClassName,\n      title: typeof label === 'string' ? label : ''\n    }, labelChildren));\n  });\n};\nexport default FormItemLabel;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","QuestionCircleOutlined","classNames","React","Col","useLocaleReceiver","defaultLocale","Tooltip","FormContext","toTooltipProps","tooltip","isValidElement","title","FormItemLabel","_ref","prefixCls","label","htmlFor","labelCol","labelAlign","colon","required","requiredMark","formLocale","createElement","Consumer","key","_ref2","vertical","contextLabelAlign","contextLabelCol","labelWrap","contextColon","_a","mergedLabelCol","mergedLabelAlign","labelClsBasic","labelColClassName","className","labelChildren","computedColon","haveColon","trim","replace","tooltipProps","icon","restTooltipProps","tooltipNode","assign","cloneElement","Fragment","optional","Form","labelClassName"],"sources":["/Users/kaizhang/Desktop/Sales_InternalTool/sales_pipelinefrontend/node_modules/antd/es/form/FormItemLabel.js"],"sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport QuestionCircleOutlined from \"@ant-design/icons/es/icons/QuestionCircleOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Col from '../grid/col';\nimport { useLocaleReceiver } from '../locale/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport Tooltip from '../tooltip';\nimport { FormContext } from './context';\nfunction toTooltipProps(tooltip) {\n  if (!tooltip) {\n    return null;\n  }\n  if (typeof tooltip === 'object' && ! /*#__PURE__*/React.isValidElement(tooltip)) {\n    return tooltip;\n  }\n  return {\n    title: tooltip\n  };\n}\nconst FormItemLabel = _ref => {\n  let {\n    prefixCls,\n    label,\n    htmlFor,\n    labelCol,\n    labelAlign,\n    colon,\n    required,\n    requiredMark,\n    tooltip\n  } = _ref;\n  const [formLocale] = useLocaleReceiver('Form');\n  if (!label) return null;\n  return /*#__PURE__*/React.createElement(FormContext.Consumer, {\n    key: \"label\"\n  }, _ref2 => {\n    let {\n      vertical,\n      labelAlign: contextLabelAlign,\n      labelCol: contextLabelCol,\n      labelWrap,\n      colon: contextColon\n    } = _ref2;\n    var _a;\n    const mergedLabelCol = labelCol || contextLabelCol || {};\n    const mergedLabelAlign = labelAlign || contextLabelAlign;\n    const labelClsBasic = `${prefixCls}-item-label`;\n    const labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && `${labelClsBasic}-left`, mergedLabelCol.className, {\n      [`${labelClsBasic}-wrap`]: !!labelWrap\n    });\n    let labelChildren = label;\n    // Keep label is original where there should have no colon\n    const computedColon = colon === true || contextColon !== false && colon !== false;\n    const haveColon = computedColon && !vertical;\n    // Remove duplicated user input colon\n    if (haveColon && typeof label === 'string' && label.trim() !== '') {\n      labelChildren = label.replace(/[:|：]\\s*$/, '');\n    }\n    // Tooltip\n    const tooltipProps = toTooltipProps(tooltip);\n    if (tooltipProps) {\n      const {\n          icon = /*#__PURE__*/React.createElement(QuestionCircleOutlined, null)\n        } = tooltipProps,\n        restTooltipProps = __rest(tooltipProps, [\"icon\"]);\n      const tooltipNode = /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, restTooltipProps), /*#__PURE__*/React.cloneElement(icon, {\n        className: `${prefixCls}-item-tooltip`,\n        title: ''\n      }));\n      labelChildren = /*#__PURE__*/React.createElement(React.Fragment, null, labelChildren, tooltipNode);\n    }\n    // Add required mark if optional\n    if (requiredMark === 'optional' && !required) {\n      labelChildren = /*#__PURE__*/React.createElement(React.Fragment, null, labelChildren, /*#__PURE__*/React.createElement(\"span\", {\n        className: `${prefixCls}-item-optional`,\n        title: \"\"\n      }, (formLocale === null || formLocale === void 0 ? void 0 : formLocale.optional) || ((_a = defaultLocale.Form) === null || _a === void 0 ? void 0 : _a.optional)));\n    }\n    const labelClassName = classNames({\n      [`${prefixCls}-item-required`]: required,\n      [`${prefixCls}-item-required-mark-optional`]: requiredMark === 'optional',\n      [`${prefixCls}-item-no-colon`]: !computedColon\n    });\n    return /*#__PURE__*/React.createElement(Col, Object.assign({}, mergedLabelCol, {\n      className: labelColClassName\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: htmlFor,\n      className: labelClassName,\n      title: typeof label === 'string' ? label : ''\n    }, labelChildren));\n  });\n};\nexport default FormItemLabel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}